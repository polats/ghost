{
  "_args": [
    [
      "knex@https://github.com/kirrg001/knex/tarball/d979ee6fa9b979e3be6f867dff015fdbc1f574ba",
      "/home/polats/polats.github.io/node_modules/knex-migrator"
    ]
  ],
  "_from": "https://github.com/kirrg001/knex/tarball/d979ee6fa9b979e3be6f867dff015fdbc1f574ba",
  "_id": "knex@0.14.6",
  "_inCache": true,
  "_installable": true,
  "_location": "/knex-migrator/knex",
  "_phantomChildren": {
    "ms": "2.0.0"
  },
  "_requested": {
    "name": "knex",
    "raw": "knex@https://github.com/kirrg001/knex/tarball/d979ee6fa9b979e3be6f867dff015fdbc1f574ba",
    "rawSpec": "https://github.com/kirrg001/knex/tarball/d979ee6fa9b979e3be6f867dff015fdbc1f574ba",
    "scope": null,
    "spec": "https://github.com/kirrg001/knex/tarball/d979ee6fa9b979e3be6f867dff015fdbc1f574ba",
    "type": "remote"
  },
  "_requiredBy": [
    "/knex-migrator"
  ],
  "_resolved": "https://github.com/kirrg001/knex/tarball/d979ee6fa9b979e3be6f867dff015fdbc1f574ba",
  "_shasum": "31af3c65702c6d8fd459f5d68f6d0eaee27590a5",
  "_shrinkwrap": null,
  "_spec": "knex@https://github.com/kirrg001/knex/tarball/d979ee6fa9b979e3be6f867dff015fdbc1f574ba",
  "_where": "/home/polats/polats.github.io/node_modules/knex-migrator",
  "author": {
    "name": "Tim Griesser",
    "url": "https://github.com/tgriesser"
  },
  "bin": {
    "knex": "./bin/cli.js"
  },
  "browser": {
    "./lib/bin/cli.js": "./lib/util/noop.js",
    "./lib/migrate/index.js": "./lib/util/noop.js",
    "./lib/seed/index.js": "./lib/util/noop.js",
    "mariasql": false,
    "mssql": false,
    "mysql": false,
    "mysql2": false,
    "oracle": false,
    "oracledb": false,
    "pg": false,
    "pg-query-stream": false,
    "sqlite3": false,
    "strong-oracle": false
  },
  "bugs": {
    "url": "https://github.com/tgriesser/knex/issues"
  },
  "buildDependencies": [
    "babel-cli",
    "babel-plugin-add-module-exports",
    "babel-plugin-lodash",
    "babel-plugin-transform-runtime",
    "babel-preset-es2015",
    "babel-preset-es2015-loose",
    "rimraf"
  ],
  "dependencies": {
    "babel-runtime": "^6.26.0",
    "bluebird": "^3.5.1",
    "chalk": "2.3.2",
    "commander": "^2.15.1",
    "debug": "3.1.0",
    "inherits": "~2.0.3",
    "interpret": "^1.1.0",
    "liftoff": "2.5.0",
    "lodash": "^4.17.5",
    "minimist": "1.2.0",
    "mkdirp": "^0.5.1",
    "pg-connection-string": "2.0.0",
    "readable-stream": "2.3.6",
    "safe-buffer": "^5.1.1",
    "tarn": "^1.1.4",
    "tildify": "1.2.0",
    "uuid": "^3.2.1",
    "v8flags": "^3.0.2"
  },
  "description": "A batteries-included SQL query & schema builder for Postgres, MySQL and SQLite3 and the Browser",
  "devDependencies": {
    "JSONStream": "^1.3.2",
    "async": "^2.6.0",
    "babel-cli": "^6.26.0",
    "babel-eslint": "^8.2.2",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-lodash": "3.3.2",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.6.1",
    "chai": "^4.1.2",
    "coveralls": "~3.0.0",
    "eslint": "4.19.1",
    "eslint-plugin-import": "^2.10.0",
    "estraverse": "^4.2.0",
    "istanbul": "^0.4.5",
    "json-loader": "^0.5.7",
    "mariasql": "^0.2.6",
    "mocha": "^3.5.3",
    "mock-fs": "^4.4.2",
    "mssql": "^4.1.0",
    "mysql": "^2.15.0",
    "mysql2": "^1.5.3",
    "pg": "^7.4.1",
    "pg-query-stream": "^1.1.1",
    "rimraf": "^2.6.2",
    "sinon": "^4.5.0",
    "sinon-chai": "^3.0.0",
    "source-map-support": "^0.5.4",
    "sqlite3": "^4.0.0",
    "tap-spec": "^4.1.1",
    "tape": "^4.9.0",
    "through": "^2.3.8",
    "toxiproxy-node-client": "^2.0.6"
  },
  "files": [
    "CHANGELOG.md",
    "CONTRIBUTING.md",
    "LICENSE",
    "README.md",
    "bin/*",
    "knex.js",
    "lib/*",
    "scripts/*",
    "src/*"
  ],
  "homepage": "https://github.com/tgriesser/knex#readme",
  "keywords": [
    "mariadb",
    "mssql",
    "mysql",
    "oracle",
    "postgresql",
    "query",
    "sql",
    "sqlite3"
  ],
  "license": "MIT",
  "main": "knex.js",
  "name": "knex",
  "optionalDependencies": {},
  "react-native": {
    "./lib/migrate": "./lib/util/noop.js",
    "./lib/seed": "./lib/util/noop.js"
  },
  "readme": "# [knex.js](http://knexjs.org)\n\n[![npm version](http://img.shields.io/npm/v/knex.svg)](https://npmjs.org/package/knex)\n[![Build Status](https://travis-ci.org/tgriesser/knex.svg?branch=master)](https://travis-ci.org/tgriesser/knex)\n[![Coverage Status](https://coveralls.io/repos/tgriesser/knex/badge.svg?branch=master)](https://coveralls.io/r/tgriesser/knex?branch=master)\n[![Dependencies Status](https://david-dm.org/tgriesser/knex.svg)](https://david-dm.org/tgriesser/knex)\n[![Gitter chat](https://badges.gitter.im/tgriesser/knex.svg)](https://gitter.im/tgriesser/knex)\n\n> **A SQL query builder that is _flexible_, _portable_, and _fun_ to use!**\n\nA batteries-included, multi-dialect (MSSQL, MySQL, PostgreSQL, SQLite3, Oracle(including Oracle Wallet Authentication), WebSQL) query builder for\nNode.js and the Browser, featuring:\n\n- [transactions](http://knexjs.org/#Transactions)\n- [connection pooling](http://knexjs.org/#Installation-pooling)\n- [streaming queries](http://knexjs.org/#Interfaces-Streams)\n- both a [promise](http://knexjs.org/#Interfaces-Promises) and [callback](http://knexjs.org/#Interfaces-Callbacks) API\n- a [thorough test suite](https://travis-ci.org/tgriesser/knex)\n- the ability to [run in the Browser](http://knexjs.org/#Installation-browser)\n\n[Read the full documentation to get started!](http://knexjs.org)\n\nFor support and questions, join the `#bookshelf` channel on freenode IRC\n\nFor an Object Relational Mapper, see: \n- http://bookshelfjs.org\n- https://github.com/Vincit/objection.js\n\nTo see the SQL that Knex will generate for a given query, see: [Knex Query Lab](http://michaelavila.com/knex-querylab/)\n\n## Examples\n\nWe have several examples [on the website](http://knexjs.org). Here is the first one to get you started:\n\n```js\nvar knex = require('knex')({\n  dialect: 'sqlite3',\n  connection: {\n    filename: './data.db'\n  }\n});\n\n// Create a table\nknex.schema.createTable('users', function(table) {\n  table.increments('id');\n  table.string('user_name');\n})\n\n// ...and another\n.createTable('accounts', function(table) {\n  table.increments('id');\n  table.string('account_name');\n  table.integer('user_id').unsigned().references('users.id');\n})\n\n// Then query the table...\n.then(function() {\n  return knex.insert({user_name: 'Tim'}).into('users');\n})\n\n// ...and using the insert id, insert into the other table.\n.then(function(rows) {\n  return knex.table('accounts').insert({account_name: 'knex', user_id: rows[0]});\n})\n\n// Query both of the rows.\n.then(function() {\n  return knex('users')\n    .join('accounts', 'users.id', 'accounts.user_id')\n    .select('users.user_name as user', 'accounts.account_name as account');\n})\n\n// .map over the results\n.map(function(row) {\n  console.log(row);\n})\n\n// Finally, add a .catch handler for the promise chain\n.catch(function(e) {\n  console.error(e);\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/tgriesser/knex.git"
  },
  "scripts": {
    "babel": "rimraf ./lib && babel src --out-dir lib --copy-files",
    "build": "npm run babel",
    "coveralls": "cat ./test/coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "debug_tape": "node-debug test/tape/index.js",
    "debug_test": "node-debug _mocha -t 0 test/index.js",
    "dev": "rimraf ./lib && babel -w src --out-dir lib --copy-files",
    "lint": "eslint src/**",
    "mssql:destroy": "docker-compose -f scripts/mssql-docker-compose.yml stop",
    "mssql:init": "docker-compose -f scripts/mssql-docker-compose.yml up --no-start && docker-compose -f scripts/mssql-docker-compose.yml start",
    "mssql:test": "DB=mssql npm test",
    "oracledb:test": "docker rmi -f --no-prune knex-test-oracledb && docker build -f scripts/oracle-tests-Dockerfile --tag knex-test-oracledb . && docker run -i -t knex-test-oracledb",
    "plaintest": "mocha -t 10000 -b -R spec test/index.js && npm run tape",
    "pre_test": "npm run lint",
    "prepublish": "npm run babel",
    "stress:destroy": "docker-compose -f scripts/stress-test/docker-compose.yml stop",
    "stress:init": "docker-compose -f scripts/stress-test/docker-compose.yml up --no-start && docker-compose -f scripts/stress-test/docker-compose.yml start",
    "stress:test": "node scripts/stress-test/knex-stress-test.js |  grep -A 3 -- '- STATS '",
    "tape": "node test/tape/index.js | tap-spec",
    "test": "npm run pre_test && istanbul --config=test/.istanbul.yml cover node_modules/mocha/bin/_mocha -- --check-leaks -t 10000 -b -R spec test/index.js && npm run tape"
  },
  "tonicExampleFilename": "scripts/runkit-example.js",
  "version": "0.14.6"
}
