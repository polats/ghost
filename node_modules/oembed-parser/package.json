{
  "_args": [
    [
      "oembed-parser@https://github.com/kevinansfield/oembed-parser/tarball/80af3dc41059bcc0caa80db010265a811a4267c7",
      "/home/polats/polats.github.io"
    ]
  ],
  "_from": "https://github.com/kevinansfield/oembed-parser/tarball/80af3dc41059bcc0caa80db010265a811a4267c7",
  "_id": "oembed-parser@1.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/oembed-parser",
  "_phantomChildren": {},
  "_requested": {
    "name": "oembed-parser",
    "raw": "oembed-parser@https://github.com/kevinansfield/oembed-parser/tarball/80af3dc41059bcc0caa80db010265a811a4267c7",
    "rawSpec": "https://github.com/kevinansfield/oembed-parser/tarball/80af3dc41059bcc0caa80db010265a811a4267c7",
    "scope": null,
    "spec": "https://github.com/kevinansfield/oembed-parser/tarball/80af3dc41059bcc0caa80db010265a811a4267c7",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://github.com/kevinansfield/oembed-parser/tarball/80af3dc41059bcc0caa80db010265a811a4267c7",
  "_shasum": "42f417d83d79ee0d8631546e171e50d5b2f14027",
  "_shrinkwrap": null,
  "_spec": "oembed-parser@https://github.com/kevinansfield/oembed-parser/tarball/80af3dc41059bcc0caa80db010265a811a4267c7",
  "_where": "/home/polats/polats.github.io",
  "author": {
    "name": "@ndaidong"
  },
  "bugs": {
    "url": "https://github.com/ndaidong/oembed-parser/issues"
  },
  "dependencies": {
    "node-fetch": "^2.1.2",
    "promise-wtf": "^1.2.4"
  },
  "description": "Get oEmbed data from given URL.",
  "devDependencies": {
    "bellajs": "^7.2.2",
    "debug": "^3.1.0",
    "eslint": "^4.19.1",
    "eslint-config-goes": "^1.0.0",
    "tap": "^12.0.1"
  },
  "engines": {
    "node": ">= 6.0"
  },
  "homepage": "https://www.npmjs.com/package/oembed-parser",
  "keywords": [
    "extractor",
    "oembed",
    "parser",
    "util"
  ],
  "license": "MIT",
  "main": "./index.js",
  "name": "oembed-parser",
  "optionalDependencies": {},
  "readme": "# oembed-parser\noembed-parser\n\n[![NPM](https://badge.fury.io/js/oembed-parser.svg)](https://badge.fury.io/js/oembed-parser)\n[![Build Status](https://travis-ci.org/ndaidong/oembed-parser.svg?branch=master)](https://travis-ci.org/ndaidong/oembed-parser)\n[![codecov](https://codecov.io/gh/ndaidong/oembed-parser/branch/master/graph/badge.svg)](https://codecov.io/gh/ndaidong/oembed-parser)\n\n### Installation\n\n```\nnpm install oembed-parser\n```\n\n### Usage\n\n```\nvar {extract} = require('oembed-parser');\n\nlet url = 'https://www.youtube.com/watch?v=8jPQjjsBbIc';\n\nextract(url).then((data) => {\n  console.log(data);\n}).catch((err) => {\n  console.log(err);\n});\n```\n\n### APIs\n\n#### .extract(String URL)\n\nReturn a Promise object.\n\n#### .hasProvider(String URL)\n\nReturn boolean. True if the URL matches with any provider in the list.\n\n\n#### Provider list\n\nList of resource providers is a clone of [oembed.com](http://oembed.com/providers.json) and available [here](https://raw.githubusercontent.com/ndaidong/oembed-parser/master/src/utils/providers.json).\n\n\n## Test\n\n```\ngit clone https://github.com/ndaidong/oembed-parser.git\ncd oembed-parser\nnpm install\nnpm test\n```\n\n# License\n\nThe MIT License (MIT)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ndaidong/oembed-parser.git"
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "reset": "node reset",
    "start": "DEBUG=*:* node index",
    "sync": "DEBUG=oembed-parser:* node sync",
    "test": "tap test/start.js --coverage --reporter=spec"
  },
  "version": "1.1.1"
}
